/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.105
 * Generated at: 2025-06-14 05:23:27 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.pages.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import models.user.User;
import models.Product;
import models.ManualPayment;
import java.util.List;
import dao.ProductDAO;
import dao.PaymentDAO;
import java.util.ArrayList;

public final class dashboard_002dadmin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(10);
    _jspx_imports_classes.add("models.ManualPayment");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("dao.PaymentDAO");
    _jspx_imports_classes.add("models.user.User");
    _jspx_imports_classes.add("models.Product");
    _jspx_imports_classes.add("dao.ProductDAO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

    User currentUser = (User) session.getAttribute("user");
    String displayName = "Admin";
    if (currentUser != null) {
        displayName = currentUser.getUsername();
    }

    // Check if we're in "view all payments" mode
    boolean viewAllPayments = "true".equals(request.getParameter("viewAllPayments"));

    // Get product data
    ProductDAO productDAO = new ProductDAO();
    List<Product> latestProducts = new ArrayList<>();
    int totalProducts = 0;

    try {
        latestProducts = productDAO.getLatestProducts(5);
        totalProducts = productDAO.getTotalProducts();
    } catch (Exception e) {
        e.printStackTrace();
    }

    // Get payment data
    PaymentDAO paymentDAO = new PaymentDAO();
    List<ManualPayment> latestPayments = new ArrayList<>();
    int totalPayments = 0;

    try {
        // If viewAllPayments is true, get all payments, otherwise just the latest 5
        latestPayments = viewAllPayments ? paymentDAO.getAllPayments() : paymentDAO.getLatestPayments(5);
        totalPayments = paymentDAO.getTotalPayments();
    } catch (Exception e) {
        e.printStackTrace();
    }

    // Ensure lists are not null
    if (latestProducts == null) latestProducts = new ArrayList<>();
    if (latestPayments == null) latestPayments = new ArrayList<>();

    // Check for success messages
    String successParam = request.getParameter("success");
    String successMessage = null;
    if (successParam != null) {
        switch (successParam) {
            case "product_added":
                successMessage = "Produk berhasil ditambahkan!";
                break;
            case "product_updated":
                successMessage = "Produk berhasil diperbarui!";
                break;
            case "product_deleted":
                successMessage = "Produk berhasil dihapus!";
                break;
        }
    }

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!doctype html>\r\n");
      out.write("<html lang=\"en\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\"\r\n");
      out.write("          content=\"width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"ie=edge\">\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../styles/components/admin-sidebar.css\">\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../../styles/dashboard-admin.css\">\r\n");
      out.write("    <title>Admin Dashboard - Thrifting Store</title>\r\n");
      out.write("    <style>\r\n");
      out.write("        .notification {\r\n");
      out.write("            padding: 15px;\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            border-radius: 8px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            justify-content: space-between;\r\n");
      out.write("            animation: fadeIn 0.5s, fadeOut 0.5s 5s forwards;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .notification.success {\r\n");
      out.write("            background-color: #e8f5e9;\r\n");
      out.write("            color: #2e7d32;\r\n");
      out.write("            border-left: 4px solid #2e7d32;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .notification .message {\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .notification .icon {\r\n");
      out.write("            margin-right: 12px;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .notification .close {\r\n");
      out.write("            cursor: pointer;\r\n");
      out.write("            font-size: 18px;\r\n");
      out.write("            font-weight: bold;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-btn {\r\n");
      out.write("            display: inline-flex;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("            background-color: #f0f0f0;\r\n");
      out.write("            color: #333;\r\n");
      out.write("            padding: 8px 16px;\r\n");
      out.write("            border-radius: 4px;\r\n");
      out.write("            text-decoration: none;\r\n");
      out.write("            font-weight: 500;\r\n");
      out.write("            margin-bottom: 15px;\r\n");
      out.write("            transition: background-color 0.3s;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-btn:hover {\r\n");
      out.write("            background-color: #e0e0e0;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .back-btn svg {\r\n");
      out.write("            margin-right: 6px;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeIn {\r\n");
      out.write("            from {opacity: 0;}\r\n");
      out.write("            to {opacity: 1;}\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        @keyframes fadeOut {\r\n");
      out.write("            from {opacity: 1;}\r\n");
      out.write("            to {opacity: 0;}\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "../../components/admin-sidebar.jsp", out, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <div class=\"main-content\">\r\n");
      out.write("        <div class=\"welcome-header\">\r\n");
      out.write("            <h1>Selamat Datang, ");
      out.print( displayName );
      out.write("!</h1>\r\n");
      out.write("            <p>Berikut adalah ringkasan aktivitas toko anda</p>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        ");
 if (successMessage != null) { 
      out.write("\r\n");
      out.write("        <div class=\"notification success\" id=\"notification\">\r\n");
      out.write("            <div class=\"message\">\r\n");
      out.write("                <div class=\"icon\">\r\n");
      out.write("                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                        <path d=\"M22 11.08V12a10 10 0 1 1-5.93-9.14\"></path>\r\n");
      out.write("                        <polyline points=\"22 4 12 14.01 9 11.01\"></polyline>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
      out.print( successMessage );
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"close\" onclick=\"closeNotification()\">&times;</div>\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("        ");
 if (!viewAllPayments) { 
      out.write("\r\n");
      out.write("        <div class=\"dashboard-stats\">\r\n");
      out.write("            <div class=\"stat-card\">\r\n");
      out.write("                <div class=\"stat-icon products-icon\">\r\n");
      out.write("                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                        <rect x=\"2\" y=\"3\" width=\"20\" height=\"14\" rx=\"2\" ry=\"2\"></rect>\r\n");
      out.write("                        <line x1=\"8\" y1=\"21\" x2=\"16\" y2=\"21\"></line>\r\n");
      out.write("                        <line x1=\"12\" y1=\"17\" x2=\"12\" y2=\"21\"></line>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"stat-info\">\r\n");
      out.write("                    <h3>Total Produk</h3>\r\n");
      out.write("                    <p class=\"stat-value\">");
      out.print( totalProducts );
      out.write("</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"stat-card\">\r\n");
      out.write("                <div class=\"stat-icon orders-icon\">\r\n");
      out.write("                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                        <path d=\"M6 2L3 6v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2V6l-3-4z\"></path>\r\n");
      out.write("                        <line x1=\"3\" y1=\"6\" x2=\"21\" y2=\"6\"></line>\r\n");
      out.write("                        <path d=\"M16 10a4 4 0 0 1-8 0\"></path>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"stat-info\">\r\n");
      out.write("                    <h3>Total Pesanan</h3>\r\n");
      out.write("                    <p class=\"stat-value\">");
      out.print( totalPayments );
      out.write("</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("\r\n");
      out.write("        <div class=\"dashboard-sections\">\r\n");
      out.write("            <div class=\"section products-section\">\r\n");
      out.write("                <div class=\"section-header\">\r\n");
      out.write("                    <h2>Produk Terbaru</h2>\r\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/product-list\" class=\"view-all\">Lihat Semua</a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"data-table\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Gambar</th>\r\n");
      out.write("                                <th>Nama Produk</th>\r\n");
      out.write("                                <th>Harga</th>\r\n");
      out.write("                                <th>Kategori</th>\r\n");
      out.write("                                <th>Aksi</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
 for(Product product : latestProducts) { 
      out.write("\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td class=\"product-image\">\r\n");
      out.write("                                    <img src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.print( product.getPhoto() );
      out.write("\" alt=\"");
      out.print( product.getName() );
      out.write("\">\r\n");
      out.write("                                </td>\r\n");
      out.write("                                <td>");
      out.print( product.getName() );
      out.write("</td>\r\n");
      out.write("                                <td>Rp ");
      out.print( String.format("%,.0f", product.getPrice()) );
      out.write("</td>\r\n");
      out.write("                                <td><span class=\"category-badge\">");
      out.print( product.getCategory() );
      out.write("</span></td>\r\n");
      out.write("                                <td class=\"actions\">\r\n");
      out.write("                                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/edit-product?id=");
      out.print( product.getId() );
      out.write("\" class=\"edit-btn\">Edit</a>\r\n");
      out.write("                                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/delete-product?id=");
      out.print( product.getId() );
      out.write("\" class=\"delete-btn\" onclick=\"return confirm('Anda yakin ingin menghapus produk ini?')\">Hapus</a>\r\n");
      out.write("                                </td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    ");
 if(latestProducts.isEmpty()) { 
      out.write("\r\n");
      out.write("                        <div class=\"no-data\">Tidak ada produk untuk ditampilkan</div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"add-new\">\r\n");
      out.write("                    <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/admin/add.jsp\" class=\"add-btn\">\r\n");
      out.write("                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                            <line x1=\"12\" y1=\"5\" x2=\"12\" y2=\"19\"></line>\r\n");
      out.write("                            <line x1=\"5\" y1=\"12\" x2=\"19\" y2=\"12\"></line>\r\n");
      out.write("                        </svg>\r\n");
      out.write("                        Tambah Produk Baru\r\n");
      out.write("                    </a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("            <div class=\"section payments-section\">\r\n");
      out.write("                <div class=\"section-header\">\r\n");
      out.write("                    <h2>Pembayaran ");
      out.print( viewAllPayments ? "Semua" : "Terbaru" );
      out.write("</h2>\r\n");
      out.write("                    ");
 if (viewAllPayments) { 
      out.write("\r\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/admin/dashboard-admin.jsp\" class=\"view-all\">Kembali</a>\r\n");
      out.write("                    ");
 } else { 
      out.write("\r\n");
      out.write("                        <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/admin/dashboard-admin.jsp?viewAllPayments=true\" class=\"view-all\">Lihat Semua</a>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                ");
 if (viewAllPayments) { 
      out.write("\r\n");
      out.write("                <a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/pages/admin/dashboard-admin.jsp\" class=\"back-btn\">\r\n");
      out.write("                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\">\r\n");
      out.write("                        <line x1=\"19\" y1=\"12\" x2=\"5\" y2=\"12\"></line>\r\n");
      out.write("                        <polyline points=\"12 19 5 12 12 5\"></polyline>\r\n");
      out.write("                    </svg>\r\n");
      out.write("                    Kembali ke Dashboard\r\n");
      out.write("                </a>\r\n");
      out.write("                ");
 } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("                <div class=\"data-table\">\r\n");
      out.write("                    <table>\r\n");
      out.write("                        <thead>\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <th>Nama Pembeli</th>\r\n");
      out.write("                                <th>Produk</th>\r\n");
      out.write("                                <th>Harga</th>\r\n");
      out.write("                                <th>Alamat Pengiriman</th>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                        </thead>\r\n");
      out.write("                        <tbody>\r\n");
      out.write("                            ");
 for(ManualPayment payment : latestPayments) { 
      out.write("\r\n");
      out.write("                            <tr>\r\n");
      out.write("                                <td>");
      out.print( payment.getBuyerName() != null ? payment.getBuyerName() : "User" );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( payment.getProductName() != null ? payment.getProductName() : "Produk" );
      out.write("</td>\r\n");
      out.write("                                <td>Rp ");
      out.print( String.format("%,.0f", (double)payment.getPrice()) );
      out.write("</td>\r\n");
      out.write("                                <td>");
      out.print( payment.getAddress() != null ? payment.getAddress() : "-" );
      out.write("</td>\r\n");
      out.write("                            </tr>\r\n");
      out.write("                            ");
 } 
      out.write("\r\n");
      out.write("                        </tbody>\r\n");
      out.write("                    </table>\r\n");
      out.write("                    ");
 if(latestPayments.isEmpty()) { 
      out.write("\r\n");
      out.write("                        <div class=\"no-data\">Tidak ada pembayaran untuk ditampilkan</div>\r\n");
      out.write("                    ");
 } 
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        ");
 if (!viewAllPayments) { 
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        ");
 } 
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        // Add event listeners to ensure edit and delete buttons work properly\r\n");
      out.write("        document.addEventListener('DOMContentLoaded', function() {\r\n");
      out.write("            // Fix for edit buttons\r\n");
      out.write("            document.querySelectorAll('.edit-btn').forEach(function(btn) {\r\n");
      out.write("                btn.addEventListener('click', function(e) {\r\n");
      out.write("                    const href = this.getAttribute('href');\r\n");
      out.write("                    if (href) {\r\n");
      out.write("                        window.location.href = href;\r\n");
      out.write("                    }\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Fix for delete buttons with confirmation\r\n");
      out.write("            document.querySelectorAll('.delete-btn').forEach(function(btn) {\r\n");
      out.write("                btn.addEventListener('click', function(e) {\r\n");
      out.write("                    const href = this.getAttribute('href');\r\n");
      out.write("                    if (confirm('Anda yakin ingin menghapus item ini?')) {\r\n");
      out.write("                        if (href) {\r\n");
      out.write("                            window.location.href = href;\r\n");
      out.write("                        }\r\n");
      out.write("                    }\r\n");
      out.write("                    e.preventDefault();\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("        function closeNotification() {\r\n");
      out.write("            const notification = document.getElementById('notification');\r\n");
      out.write("            if (notification) {\r\n");
      out.write("                notification.style.display = 'none';\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
